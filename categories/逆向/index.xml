<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>逆向 - Category - Notes</title>
    <link>https://cui-jiang-tao.github.io/categories/%E9%80%86%E5%90%91/</link>
    <description>逆向 - Category - Notes</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>cjt953899262@gmail.com (cjt)</managingEditor>
      <webMaster>cjt953899262@gmail.com (cjt)</webMaster><lastBuildDate>Fri, 28 Jul 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://cui-jiang-tao.github.io/categories/%E9%80%86%E5%90%91/" rel="self" type="application/rss+xml" /><item>
  <title>160个CrackMe之001</title>
  <link>https://cui-jiang-tao.github.io/posts/160_crackme/001/</link>
  <pubDate>Fri, 28 Jul 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/160_crackme/001/</guid>
  <description><![CDATA[1. 程序分析 想要破解一个程序，必须先了解这个程序。所以，在破解过程中，对最初程序的分析很重要，它可以帮助我们理解作者的目的和意图，特别是对于注]]></description>
</item>
<item>
  <title>从内存角度看待对象-静态分析</title>
  <link>https://cui-jiang-tao.github.io/posts/%E4%BB%8E%E5%86%85%E5%AD%98%E8%A7%92%E5%BA%A6%E7%9C%8B%E5%BE%85%E5%AF%B9%E8%B1%A1-%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/</link>
  <pubDate>Fri, 31 Mar 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/%E4%BB%8E%E5%86%85%E5%AD%98%E8%A7%92%E5%BA%A6%E7%9C%8B%E5%BE%85%E5%AF%B9%E8%B1%A1-%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/</guid>
  <description><![CDATA[1. 源码 debug 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 #include &lt;stdio.h&gt; class Base { public: Base() { printf(&#34;Base()\n&#34;); } virtual]]></description>
</item>
<item>
  <title>常见的汇编指令</title>
  <link>https://cui-jiang-tao.github.io/posts/x86%E5%B8%B8%E8%A7%81%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/</link>
  <pubDate>Mon, 20 Mar 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/x86%E5%B8%B8%E8%A7%81%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/</guid>
  <description><![CDATA[标志位 在汇编语言中，标志位是用于标识CPU执行指令时出现的一些状态信息的标志。常见的标志位包括： 零标志位（ZF）：当指令执行的结果为零时，该]]></description>
</item>
<item>
  <title>c&#43;&#43;反汇编揭秘</title>
  <link>https://cui-jiang-tao.github.io/posts/c&#43;&#43;%E5%8F%8D%E6%B1%87%E7%BC%96%E6%8F%AD%E7%A7%98/</link>
  <pubDate>Tue, 07 Feb 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/c&#43;&#43;%E5%8F%8D%E6%B1%87%E7%BC%96%E6%8F%AD%E7%A7%98/</guid>
  <description><![CDATA[4. 观察各种表达式的求值过程 4.1 加法 release版 1 2 3 4 5 6 7 8 9 10 11 #include &lt;stdio.h&gt; int main(int argc, char* argv[]) { int n1 = argc; int n2 = argc; //复写传播：n2等价于引用argc，]]></description>
</item>
<item>
  <title>PE</title>
  <link>https://cui-jiang-tao.github.io/posts/%E6%BB%B4%E6%B0%B4%E4%B8%89%E6%9C%9F/</link>
  <pubDate>Tue, 07 Feb 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/%E6%BB%B4%E6%B0%B4%E4%B8%89%E6%9C%9F/</guid>
  <description><![CDATA[1. PE头字段解析 PE(Portable Executable)文件，是windows上的可移植的可执行文件，常见的 .exe .dll .sys 等都是PE文件。那么PE文件和计算机网络的]]></description>
</item>
</channel>
</rss>
