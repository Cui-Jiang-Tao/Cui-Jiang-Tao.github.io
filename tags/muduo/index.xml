<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>muduo - Tag - vstk的网站</title>
        <link>https://cui-jiang-tao.github.io/tags/muduo/</link>
        <description>muduo - Tag - vstk的网站</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>cjt953899262@gmail.com (cjt)</managingEditor>
            <webMaster>cjt953899262@gmail.com (cjt)</webMaster><lastBuildDate>Tue, 06 Dec 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://cui-jiang-tao.github.io/tags/muduo/" rel="self" type="application/rss+xml" /><item>
    <title>muduo网络库源码学习</title>
    <link>https://cui-jiang-tao.github.io/posts/muduo%E7%BD%91%E7%BB%9C%E5%BA%93%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Tue, 06 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>cjt</author>
    <guid>https://cui-jiang-tao.github.io/posts/muduo%E7%BD%91%E7%BB%9C%E5%BA%93%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[第二部分：Muduo网络库 初探EventLoop 1、什么都不做的EventLoop 一个EventLoop就是一个事件循环，下面将通过一个“什]]></description>
</item>
<item>
    <title>大并发服务器开发</title>
    <link>https://cui-jiang-tao.github.io/posts/%E5%A4%A7%E5%B9%B6%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/</link>
    <pubDate>Mon, 31 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>cjt</author>
    <guid>https://cui-jiang-tao.github.io/posts/%E5%A4%A7%E5%B9%B6%E5%8F%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91/</guid>
    <description><![CDATA[前言 服务器设计的目的 高性能 高可用 故障转移(failover) 伸缩性 library和framework： 库中类相对比较独立，我们编写应用的时候]]></description>
</item>
<item>
    <title>muduo库的设计与实现</title>
    <link>https://cui-jiang-tao.github.io/posts/muduo%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0v1.0/</link>
    <pubDate>Thu, 22 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>cjt</author>
    <guid>https://cui-jiang-tao.github.io/posts/muduo%E5%BA%93%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0v1.0/</guid>
    <description><![CDATA[1. Reactor模式 Reactor 最核心的事件就是事件分发机制，即将IO multiplexing 拿到的IO事件分发给各个文件描述符(fd)的事件处理函数(handle); 1.1 EventLoop]]></description>
</item>
</channel>
</rss>
