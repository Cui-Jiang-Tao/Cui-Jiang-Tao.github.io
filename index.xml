<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>学习记录</title>
    <link>https://cui-jiang-tao.github.io/</link>
    <description>This is my new Hugo FixIt site</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>cjt953899262@gmail.com (cjt)</managingEditor>
      <webMaster>cjt953899262@gmail.com (cjt)</webMaster><lastBuildDate>Wed, 29 Mar 2023 00:00:00 &#43;0000</lastBuildDate>
      <atom:link href="https://cui-jiang-tao.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>Ubuntu常用命令</title>
  <link>https://cui-jiang-tao.github.io/posts/ubuntu%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4/</link>
  <pubDate>Wed, 29 Mar 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/ubuntu%E5%B8%B8%E7%94%A8%E7%9A%84%E5%91%BD%E4%BB%A4/</guid>
  <description><![CDATA[Ubuntu下关闭占用端口的进程 启动hugo发现端口1313已经被使用了 1 2 3 4 $ snap run hugo server -D port 1313 already in use, attempting to use an available port Start building sites … hugo v0.111.3-5d4eb5154e1fed125ca8e9b5a0315c4180dab192+extended linux/amd64 BuildDate=2023-03-12T11:40:50Z VendorInfo=snap:0.111.3 可以查看]]></description>
</item>
<item>
  <title>加密与解密算法</title>
  <link>https://cui-jiang-tao.github.io/posts/%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/</link>
  <pubDate>Fri, 24 Mar 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86%E7%AE%97%E6%B3%95/</guid>
  <description><![CDATA[简单的异或加解密 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62]]></description>
</item>
<item>
  <title>常见的汇编指令</title>
  <link>https://cui-jiang-tao.github.io/posts/x86%E5%B8%B8%E8%A7%81%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/</link>
  <pubDate>Mon, 20 Mar 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/x86%E5%B8%B8%E8%A7%81%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4/</guid>
  <description><![CDATA[标志位 在汇编语言中，标志位是用于标识CPU执行指令时出现的一些状态信息的标志。常见的标志位包括： 零标志位（ZF）：当指令执行的结果为零时，该]]></description>
</item>
<item>
  <title>c&#43;&#43;小工具</title>
  <link>https://cui-jiang-tao.github.io/posts/c&#43;&#43;%E5%B0%8F%E5%B7%A5%E5%85%B7/</link>
  <pubDate>Tue, 14 Mar 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/c&#43;&#43;%E5%B0%8F%E5%B7%A5%E5%85%B7/</guid>
  <description><![CDATA[遍历一个文件夹 C++ 中遍历一个文件夹通常需要使用系统特定的 API。以下是使用 Windows API 实现遍历文件夹的示例代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19]]></description>
</item>
<item>
  <title>c&#43;&#43;反汇编揭秘</title>
  <link>https://cui-jiang-tao.github.io/posts/c&#43;&#43;%E5%8F%8D%E6%B1%87%E7%BC%96%E6%8F%AD%E7%A7%98/</link>
  <pubDate>Tue, 07 Feb 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/c&#43;&#43;%E5%8F%8D%E6%B1%87%E7%BC%96%E6%8F%AD%E7%A7%98/</guid>
  <description><![CDATA[4. 观察各种表达式的求值过程 4.1 加法 release版 1 2 3 4 5 6 7 8 9 10 11 #include &lt;stdio.h&gt; int main(int argc, char* argv[]) { int n1 = argc; int n2 = argc; //复写传播：n2等价于引用argc，]]></description>
</item>
<item>
  <title>PE</title>
  <link>https://cui-jiang-tao.github.io/posts/%E6%BB%B4%E6%B0%B4%E4%B8%89%E6%9C%9F/</link>
  <pubDate>Tue, 07 Feb 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/%E6%BB%B4%E6%B0%B4%E4%B8%89%E6%9C%9F/</guid>
  <description><![CDATA[1. PE头字段解析 PE(Portable Executable)文件，是windows上的可移植的可执行文件，常见的 .exe .dll .sys 等都是PE文件。那么PE文件和计算机网络的]]></description>
</item>
<item>
  <title>汇编(8086)</title>
  <link>https://cui-jiang-tao.github.io/posts/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</link>
  <pubDate>Tue, 07 Feb 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</guid>
  <description><![CDATA[2. 寄存器 Debug基本指令 用 Debug的 R命令查看、改变CPU寄存器的内容 用 Debug的 D命令查看内存中的内容 用 Debug的 E命令改写内存中]]></description>
</item>
<item>
  <title>Bash脚本入门</title>
  <link>https://cui-jiang-tao.github.io/posts/bash%E8%84%9A%E6%9C%AC%E5%85%A5%E9%97%A8/</link>
  <pubDate>Sun, 15 Jan 2023 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/bash%E8%84%9A%E6%9C%AC%E5%85%A5%E9%97%A8/</guid>
  <description><![CDATA[Bash 是 Linux 和 Mac 的默认 Shell（命令行环境），系统管理和服务器开发都需要它。 1. Bash 简介 Bash 是 Unix 系统和 Linux 系统的一种 Shell（命令行环境），是目前绝大]]></description>
</item>
<item>
  <title>CMake入门</title>
  <link>https://cui-jiang-tao.github.io/posts/cmake%E5%85%A5%E9%97%A8/</link>
  <pubDate>Fri, 30 Dec 2022 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/cmake%E5%85%A5%E9%97%A8/</guid>
  <description><![CDATA[第一部分：基本例程 1. hello-cmake 文件树： 1 2 3 4 5 6 ubuntu@VM-12-11-ubuntu:~/c++/study_cmake/hell-cmake$ tree . ├── CMakeLists.txt └── main.cpp 0 directories, 2 files CMakeLists.txt 1 2 3 cmake_minimum_required(VERSION 2.6) project (hello_cmake) add_executable(${PROJECT_NAME} main.cpp) 1.1 命令作用解析 1 project (hello_cmake) #设置工程名 CMake构建包]]></description>
</item>
<item>
  <title>makefile的简单例子</title>
  <link>https://cui-jiang-tao.github.io/posts/makefile/</link>
  <pubDate>Thu, 29 Dec 2022 00:00:00 &#43;0000</pubDate>
  <author>cjt</author>
  <guid>https://cui-jiang-tao.github.io/posts/makefile/</guid>
  <description><![CDATA[示例 树形结构： 1 2 3 4 5 6 7 8 9 ubuntu@VM-12-11-ubuntu:~/c++/makefile$ tree . ├── factorial.cpp ├── functions.h ├── main.cpp ├── Makefile └── printHello.cpp 0 directories, 5 files functions.h 1 2 3 4 5 6 #ifndef FUNCTIONS_H #define FUNCTIONS_H #include &lt;iostream&gt; void printHello(); int factorial(int n); #endif factorial.cpp 1 2 3 4 5 6 7]]></description>
</item>
</channel>
</rss>
